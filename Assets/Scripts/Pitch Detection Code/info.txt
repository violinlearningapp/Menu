Quick start:
1) Add this line to the 'using' section of your script:
using PitchDetector;

2) Declare a pitch detector object in your variables:
private Detector pitchDetector;

3) Instantiate the detector in the awake function:
void Awake() {
	pitchDetector = new Detector();
	pitchDetector.setSampleRate(AudioSettings.outputSampleRate);
}

4) Get the mic input from the update function, call the DetectPitch method and then the lastMidiNote() to get the midi note detected:
.
.
.
audio.GetOutputData(data,0);
pitchDetector.DetectPitch (data);
int midiant = pitchDetector.lastMidiNote ();
.
.
.



Public functions in the Detector object

setSampleRate(int samplerate) 
Set the sample rate of the mic. You need to set up this just after instantiate the object. Typically you will call this function with:
pitchDetector.setSampleRate(AudioSettings.outputSampleRate);

public void DetectPitch(float[] inBuffer) 
Once you get the data from the microphone, you need to pass all the samples tho the Detector to begin the algorithm. Typically you will call this function with:
audio.GetOutputData(data,0);
pitchDetector.DetectPitch (data);

public int lastMidiNote () 
This function returns the last midi note detected or zero if none present.

public float lastMidiNotePrecise () 
This function returns the last midi note detected with decimals or zero if none present.

public float lastFrequency() 
This function returns the last frequency detected or zero if none present.

public string lastNote() 
This function returns the last note detected in standard notation (C, C#, D, D#, E, F...).

public string midiNoteToString(int note)
This function converts a midi note to a standard notation note.

